<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on @Qian Sun</title>
    <link>https://dcoliversun.github.io/categories/java/</link>
    <description>Recent content in Java on @Qian Sun</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>cn</language>
    <lastBuildDate>Fri, 12 Mar 2021 19:48:22 +0800</lastBuildDate><atom:link href="https://dcoliversun.github.io/categories/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Executor与线程池</title>
      <link>https://dcoliversun.github.io/2021/java-concurrency-1/</link>
      <pubDate>Fri, 12 Mar 2021 19:48:22 +0800</pubDate>
      
      <guid>https://dcoliversun.github.io/2021/java-concurrency-1/</guid>
      <description>本文介绍了Executor框架，框架采用了任务提交、执行的解耦方案。为了让该方案适配不同场景，需要将多种因素考虑进执行策略中。不同的执行策略也衍生出不同的线程池，我们在使用前需要分析真实环境去选择适当的线程池。线程池异步执行多个任务，导致任务可能处于不同的状态。为了管理整个线程池的生命周期，ExecutorService提供了多种方法，一般采取awaitTermination、shutdown组合使用的方式，达到同步关闭的效果。最后，本文介绍了ScheduledThreadPool在延迟任务、周期任务的优越性，如果构建调度服务，可以采用DelayQueue。</description>
    </item>
    
  </channel>
</rss>
